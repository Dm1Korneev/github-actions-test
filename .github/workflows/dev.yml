name: 'Deploy to Digital ocean pages'

on:
  push:
    branches:
    - master

env:
  REGISTRY: "registry.digitalocean.com/test-container-dm1korneev"
  IMAGE_NAME: test-image-dm1korneev
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master
      uses: actions/checkout@v1

    - name: 'Use Node.js 12.x'
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: 'Install yarn'
      run: npm install -g yarn

    - name: 'Install dependencies'
      run: yarn

    - name: 'Build client'
      run: yarn build

    - name: 'Build server'
      run: yarn server:build 

    # Build docker image
    - name: Build container image
      run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

    - name: Deploy to Digital Ocean droplet via SSH action
      uses: appleboy/ssh-action@master
      with:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.SSHKEY }}
        envs: IMAGE_NAME,REGISTRY,GITHUB_SHA
        script: |
          # Stop running container
          docker stop $(echo $IMAGE_NAME)

          # Remove old container
          docker rm $(echo $IMAGE_NAME)

          # Run a new container from a new image
          docker run -d \
          -p 4000:4000 \
          --name $(echo $IMAGE_NAME) \
          $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
